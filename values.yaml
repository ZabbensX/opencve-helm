# Default values for opencve.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cleveritcz/opencve
  pullPolicy: IfNotPresent
  tag: 1.4.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "opencve"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: opencve.cleverit.cz
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: opencve-ssl-secret
      hosts:
        - opencve.cleverit.cz

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  averageCPUUtilizationPercentage: 80
  averageMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# see bitnami/redis values
redis:
  enabled: true
  image:
     repository: bitnami/redis
     tag: 7.0.7
     pullPolicy: IfNotPresent
     pullSecrets: []
     debug: false
  master:
    configuration: "appendonly no"
    startupProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 20
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1
    persistence:
      enabled: false
  architecture: standalone
  auth:
    enabled: false
  metrics:
    enabled: false
    image:
      repository: bitnami/redis-exporter
      tag: 1.45.0
      pullPolicy: IfNotPresent
      pullSecrets: []

# see bitnami/postresql values
postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: 11.18.0
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  global:
    postgresql:
      postgresqlDatabase: opencve
      postgresqlUsername: postgres 
      postgresqlPassword: opencve
  serviceAccount:
    enabled: true
  persistence:
    enabled: true
    size: 10Gi
  metrics:
    enabled: false 
    image:
      repository: bitnami/postgres-exporter
      tag: 0.11.1

gunicorn:
  backlog: 2048
  # Run "grep 'cpu cores' /proc/cpuinfo | uniq|awk '{print $4}'" and count * 2 +1
  workers: 9 
  worker_class: 'sync'
  worker_connections: 1000
  timeout: 30
  graceful_timeout: 30
  keepalive: 5
  spew: False
  user: 'opencve'
  group: 'opencve'
  loglevel: 'error'
  access_log_format: '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'
  max_requests: 1000
  max_requests_jitter: 50
  preload_app: True
  threads: 1 

ts_jitter Opencve application config:
opencve:
  config:
    # Use only if you are using an external database. 
    # Will be ignored if postgreql.enabled is true.
    database_uri:
    # Secret Key for signing session tokens
    secret_key: TqleI1sm3eEwa2uw9qwPeyWi23q823u4923jd7qeq0wYt3jadC
    display_welcome: False
    display_terms: False  
  
  healthcheck:
    livenessProbePeriodSeconds: 30
    readinessProbePeriodSeconds: 30
  
  recaptcha:
    display_recaptcha: False
    recaptcha_site_key:
    recaptcha_secret_key:
  
  display:
    cves_per_page: 20
    vendors_per_page: 20
    products_per_page: 20
    cwes_per_page: 20
    reports_per_page: 20
    alerts_per_page: 20
    tags_per_page: 20
    activities_per_page: 20
  
  api:
    ratelimit_enabled: False
    ratelimit_value: 3600/hour
    
  mail:
    # smtp or sendmail
    email_adapter: smtp
    email_from: no-reply@opencve.io
    smtp_server: my.mail.server
    smtp_port: 587
    smtp_use_tls: True
    smtp_username: login@user.name
    smtp_password: mysecretpassword
